apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xinit.spaces.platformref.upbound.io
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: spaces.platformref.upbound.io/v1alpha1
    kind: XInit
  mode: Pipeline
  pipeline:
    - step: providers
      functionRef:
        name: crossplane-contrib-function-go-templating
      input:
        apiVersion: gotemplating.fn.crossplane.io/v1beta1
        kind: GoTemplate
        source: Inline
        inline:
          template: |
            {{ $spec := .observed.composite.resource.spec }}
            {{- range $i, $provider := $spec.parameters.operators.crossplane.providers }}
            ---
            apiVersion: kubernetes.crossplane.io/v1alpha2
            kind: Object
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-p
              labels:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-p
            spec:
              forProvider:
                manifest:
                  apiVersion: pkg.crossplane.io/v1
                  kind: Provider
                  metadata:
                    name: {{ $provider.name }}
                  spec:
                    package: {{ $provider.package }}
                    {{- if $provider.localRbac }}
                    runtimeConfigRef:
                      apiVersion: pkg.crossplane.io/v1beta1
                      kind: DeploymentRuntimeConfig
                      name: {{ $provider.name }}
                    {{- end }}
              providerConfigRef:
                name: {{ $spec.parameters.providerConfigName }}
            ---
            apiVersion: apiextensions.crossplane.io/v1alpha1
            kind: Usage
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-p-usage
            spec:
              by:
                apiVersion: kubernetes.crossplane.io/v1alpha2
                kind: Object
                resourceSelector:
                  matchControllerRef: true
                  matchLabels:
                    gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-p
              of:
                apiVersion: helm.crossplane.io/v1beta1
                kind: Release
                resourceSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: crossplane
            {{- if $provider.localRbac }}
            ---
            apiVersion: kubernetes.crossplane.io/v1alpha2
            kind: Object
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-drc
              labels:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-drc
            spec:
              forProvider:
                manifest:
                  apiVersion: pkg.crossplane.io/v1beta1
                  kind: DeploymentRuntimeConfig
                  metadata:
                    name: {{ $provider.name }}
                  spec:
                    serviceAccountTemplate:
                      metadata:
                        name: provider-kubernetes
              providerConfigRef:
                name: {{ $spec.parameters.providerConfigName }}
            ---
            apiVersion: apiextensions.crossplane.io/v1alpha1
            kind: Usage
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-drc-usage
            spec:
              by:
                apiVersion: kubernetes.crossplane.io/v1alpha2
                kind: Object
                resourceSelector:
                  matchControllerRef: true
                  matchLabels:
                    gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-drc
              of:
                apiVersion: helm.crossplane.io/v1beta1
                kind: Release
                resourceSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: crossplane
            ---
            apiVersion: kubernetes.crossplane.io/v1alpha2
            kind: Object
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-crb
              labels:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-crb
            spec:
              forProvider:
                manifest:
                  apiVersion: rbac.authorization.k8s.io/v1
                  kind: ClusterRoleBinding
                  metadata:
                    name: {{ $provider.name }}-admin-binding
                  subjects:
                  - kind: ServiceAccount
                    name: {{ $provider.name }}
                    namespace: upbound-system
                  roleRef:
                    kind: ClusterRole
                    name: cluster-admin
                    apiGroup: rbac.authorization.k8s.io
              providerConfigRef:
                name: {{ $spec.parameters.providerConfigName }}
            ---
            apiVersion: apiextensions.crossplane.io/v1alpha1
            kind: Usage
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-crb-usage
            spec:
              by:
                apiVersion: kubernetes.crossplane.io/v1alpha2
                kind: Object
                resourceSelector:
                  matchControllerRef: true
                  matchLabels:
                    gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-crb
              of:
                apiVersion: helm.crossplane.io/v1beta1
                kind: Release
                resourceSelector:
                  matchControllerRef: true
                  matchLabels:
                    type: crossplane
            ---
            apiVersion: kubernetes.crossplane.io/v1alpha2
            kind: Object
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-pc
              labels:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-pc
            spec:
              forProvider:
                manifest:
                  {{- if eq $provider.name "provider-kubernetes" }}
                  apiVersion: kubernetes.crossplane.io/v1alpha1
                  {{- end }}
                  {{- if eq $provider.name "provider-helm" }}
                  apiVersion: helm.crossplane.io/v1beta1
                  {{- end }}
                  kind: ProviderConfig
                  metadata:
                    name: upbound-cluster
                  spec:
                    credentials:
                      source: InjectedIdentity
              providerConfigRef:
                name: {{ $spec.parameters.providerConfigName }}
            ---
            apiVersion: apiextensions.crossplane.io/v1alpha1
            kind: Usage
            metadata:
              annotations:
                gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-pc-usage
            spec:
              by:
                apiVersion: kubernetes.crossplane.io/v1alpha2
                kind: Object
                resourceSelector:
                  matchControllerRef: true
                  matchLabels:
                    gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-pc
              of:
                apiVersion: kubernetes.crossplane.io/v1alpha2
                kind: Object
                resourceSelector:
                  matchControllerRef: true
                  matchLabels:
                    gotemplating.fn.crossplane.io/composition-resource-name: {{ $spec.parameters.providerConfigName }}-{{ $provider.name }}-p
            {{- end }}
            {{- end }}

    - step: patch-and-transform
      functionRef:
        name: upboundcare-function-conditional-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - name: copy-provider-helm-pull-secret
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              spec:
                references:
                  - patchesFrom:
                      apiVersion: v1
                      kind: Secret
                      name: upbound-provider-helm-pull
                      namespace: upbound-system
                      fieldPath: data[username]
                    toFieldPath: data[username]
                  - patchesFrom:
                      apiVersion: v1
                      kind: Secret
                      name: upbound-provider-helm-pull
                      namespace: upbound-system
                      fieldPath: data[password]
                    toFieldPath: data[password]
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: Secret
                    metadata:
                      name: upbound-provider-helm-pull
                      namespace: upbound-system
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name

          - name: copy-crossplane-pull-secret
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha1
              kind: Object
              spec:
                references:
                  - patchesFrom:
                      apiVersion: v1
                      kind: Secret
                      name: upbound-pull-secret
                      namespace: upbound-system
                      fieldPath: data[.dockerconfigjson]
                    toFieldPath: data[.dockerconfigjson]
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: Secret
                    type: kubernetes.io/dockerconfigjson
                    metadata:
                      name: upbound-pull-secret
                      namespace: upbound-system
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name

          - name: cert-manager
            condition: observed.composite.resource.spec.parameters.operators.certmanager.enabled == true
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              spec:
                rollbackLimit: 3
                forProvider:
                  namespace: cert-manager
                  chart:
                    name: cert-manager
                    repository: https://charts.jetstack.io
                  values:
                    installCRDs: true
                  waitTimeout: "360s"
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.operators.certmanager.version
                toFieldPath: spec.forProvider.chart.version

          - name: ingress-nginx
            condition: observed.composite.resource.spec.parameters.operators.ingressnginx.enabled == true
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              spec:
                rollbackLimit: 3
                forProvider:
                  namespace: ingress-nginx
                  chart:
                    name: ingress-nginx
                    repository: https://kubernetes.github.io/ingress-nginx
                  set:
                    - name: "controller.service.type"
                      value: "LoadBalancer"
                    - name: "controller.allowSnippetAnnotations"
                      value: "true"
                    - name: controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"
                      value: "/healthz"
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.operators.ingressnginx.version
                toFieldPath: spec.forProvider.chart.version
              - type: ToCompositeFieldPath
                fromFieldPath: metadata.annotations[crossplane.io/external-name]
                toFieldPath: status.status.ingressNginxName
                policy:
                  fromFieldPath: Optional

          - name: external-dns-irsa
            condition: observed.composite.resource.spec.parameters.operators.externaldns.aws.enabled == true
            base:
              apiVersion: aws.platform.upbound.io/v1alpha1
              kind: XIRSA
              spec:
                parameters:
                  condition: StringEquals
                  serviceAccount:
                    name: external-dns
                    namespace: external-dns
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.parameters.id
              - type: ToCompositeFieldPath
                fromFieldPath: status.roleArn
                toFieldPath: status.status.externalDNS.IRSARoleArn
                policy:
                  fromFieldPath: Optional
              - type: CombineFromComposite
                policy:
                  fromFieldPath: Required
                combine:
                  variables:
                    - fromFieldPath: spec.parameters.operators.externaldns.aws.route53ZoneId
                  strategy: string
                  string:
                    fmt: |
                      {
                        "Version":"2012-10-17",
                        "Statement":[
                          {
                            "Effect":"Allow",
                            "Action":[
                              "route53:ListResourceRecordSets",
                              "route53:ListHostedZones"
                            ],
                            "Resource":"*"
                          },
                          {
                            "Effect":"Allow",
                            "Action":"route53:ChangeResourceRecordSets",
                            "Resource":"arn:aws:route53:::hostedzone/%s"
                          }
                        ]
                      }
                toFieldPath: spec.parameters.policyDocument

          - name: external-dns
            condition: observed.composite.resource.spec.parameters.operators.externaldns.aws.enabled == true
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              spec:
                forProvider:
                  namespace: external-dns
                  chart:
                    name: external-dns
                    repository: https://charts.bitnami.com/bitnami
                  values:
                    replicaCount: 1
                    provider: aws
                    policy: sync
                    source: ingress
                    registry: txt
                    aws:
                      batchChangeSize: 4
                      zoneType: public
                      region: us-east-1
                    rbac:
                      create: true
                    serviceAccount:
                      create: true
                      name: external-dns
                    metrics:
                      enabled: false
                      serviceMonitor:
                        enabled: false
                    replicas: 2
                    podDisruptionBudget:
                      minAvailable: 1
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.operators.externaldns.version
                toFieldPath: spec.forProvider.chart.version
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.operators.externaldns.aws.route53ZoneName
                toFieldPath: spec.forProvider.values.domainFilters[0]
              - type: FromCompositeFieldPath
                fromFieldPath: status.status.externalDNS.IRSARoleArn
                toFieldPath: spec.forProvider.values.serviceAccount.annotations[eks.amazonaws.com/role-arn]
                policy:
                  fromFieldPath: Required
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.uid
                toFieldPath: spec.forProvider.values.txtOwnerId
                transforms:
                  - string:
                      fmt: 'upbound-spaces-%s'
                      type: Format
                    type: string

          - name: universal-crossplane
            condition: observed.composite.resource.spec.parameters.operators.crossplane.enabled == true
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              metadata:
                labels:
                  type: crossplane
              spec:
                rollbackLimit: 3
                forProvider:
                  namespace: upbound-system
                  chart:
                    name: universal-crossplane
                    repository: https://charts.upbound.io/stable
                  values:
                    args:
                      - --enable-usages
                      - --max-reconcile-rate=1000
                    resourcesCrossplane:
                      limits:
                        cpu: 2000m
                        memory: 4096Mi
                      requests:
                        cpu: 1000m
                        memory: 2048Mi
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.operators.crossplane.version
                toFieldPath: spec.forProvider.chart.version
                transforms:
                  - type: string
                    string:
                      type: TrimPrefix
                      trim: "v"

    - step: automatically-detect-ready-composed-resources
      functionRef:
        name: crossplane-contrib-function-auto-ready
